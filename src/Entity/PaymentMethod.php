<?php

declare(strict_types=1);

namespace MLocati\Nexi\Entity;

use MLocati\Nexi\Entity;

/*
 * WARNING: DO NOT EDIT THIS FILE
 * It has been generated automaticlly from a template.
 * Edit the template instead.
 */

/**
 * @see https://developer.nexi.it/en/api/post-payment_methods#tab_response
 */
class PaymentMethod extends Entity
{
    /**
     * Indicates the type of payment method. Possible values:
     * - CARD - Card circuit
     * - APM - Alternative payment method.
     *
     * @optional
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     *
     * @example CARD
     */
    public function getMethodType(): ?string
    {
        return $this->_getString('methodType');
    }

    /**
     * Indicates the type of payment method. Possible values:
     * - CARD - Card circuit
     * - APM - Alternative payment method.
     *
     * @optional
     *
     * @return $this
     *
     * @example CARD
     */
    public function setMethodType(?string $value): self
    {
        return $value === null ? $this->_unset('methodType') : $this->_set('methodType', $value);
    }

    /**
     * Name of card circuit or alternative payment method (APM).
     *
     * @optional
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     *
     * @example VISA
     */
    public function getCircuit(): ?string
    {
        return $this->_getString('circuit');
    }

    /**
     * Name of card circuit or alternative payment method (APM).
     *
     * @optional
     *
     * @return $this
     *
     * @example VISA
     */
    public function setCircuit(?string $value): self
    {
        return $value === null ? $this->_unset('circuit') : $this->_set('circuit', $value);
    }

    /**
     * Payment method logo link in SVG format.
     *
     * @optional
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     *
     * @example https://ngwecomm.nexi.it/monetaweb/static/images/mybank.svg
     */
    public function getImageLink(): ?string
    {
        return $this->_getString('imageLink');
    }

    /**
     * Payment method logo link in SVG format.
     *
     * @optional
     *
     * @return $this
     *
     * @example https://ngwecomm.nexi.it/monetaweb/static/images/mybank.svg
     */
    public function setImageLink(?string $value): self
    {
        return $value === null ? $this->_unset('imageLink') : $this->_set('imageLink', $value);
    }

    /**
     * Indicates whether the payment method supports recurring payment.
     *
     * @optional
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     */
    public function getRecurringSupported(): ?bool
    {
        return $this->_getBool('recurringSupported', true);
    }

    /**
     * Indicates whether the payment method supports recurring payment.
     *
     * @optional
     *
     * @return $this
     */
    public function setRecurringSupported(?bool $value): self
    {
        return $value === null ? $this->_unset('recurringSupported') : $this->_set('recurringSupported', $value);
    }

    /**
     * Indicates whether the payment method supports OneClick payment.
     *
     * @optional
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     */
    public function getOneClickSupported(): ?bool
    {
        return $this->_getBool('oneClickSupported', true);
    }

    /**
     * Indicates whether the payment method supports OneClick payment.
     *
     * @optional
     *
     * @return $this
     */
    public function setOneClickSupported(?bool $value): self
    {
        return $value === null ? $this->_unset('oneClickSupported') : $this->_set('oneClickSupported', $value);
    }
}
