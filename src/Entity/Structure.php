<?php

declare(strict_types=1);

namespace MLocati\Nexi\Entity;

use MLocati\Nexi\Entity;

/*
 * WARNING: DO NOT EDIT THIS FILE
 * It has been generated automaticlly from a template.
 * Edit the template instead.
 */

/**
 * @see https://developer.nexi.it/en/api/get-structures#tab_response
 * @see https://developer.nexi.it/en/api/get-structures-structureId#tab_response
 * @see https://developer.nexi.it/en/api/post-structures#tab_body
 */
class Structure extends Entity
{
    /**
     * Merchant terminal identifier.
     *
     * @optional
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     *
     * @example 99999998
     */
    public function getTerminalId(): ?string
    {
        return $this->_getString('terminalId');
    }

    /**
     * Merchant terminal identifier.
     *
     * @optional
     *
     * @return $this
     *
     * @example 99999998
     */
    public function setTerminalId(?string $value): self
    {
        return $value === null ? $this->_unset('terminalId') : $this->_set('terminalId', $value);
    }

    /**
     * Structure identifier, unique in the merchant domain.
     *
     * @optional
     * Maximum length: 36
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     *
     * @example 99a172e5-423c-4648-9895-4cb5d1d43134
     */
    public function getStructureId(): ?string
    {
        return $this->_getString('structureId');
    }

    /**
     * Structure identifier, unique in the merchant domain.
     *
     * @optional
     * Maximum length: 36
     *
     * @return $this
     *
     * @example 99a172e5-423c-4648-9895-4cb5d1d43134
     */
    public function setStructureId(?string $value): self
    {
        return $value === null ? $this->_unset('structureId') : $this->_set('structureId', $value);
    }

    /**
     * Activation status of the structure. Possible values:
     * - ACTIVE
     * - NOT_ACTIVE
     *
     * @optional
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     *
     * @example ACTIVE
     */
    public function getStatus(): ?string
    {
        return $this->_getString('status');
    }

    /**
     * Activation status of the structure. Possible values:
     * - ACTIVE
     * - NOT_ACTIVE
     *
     * @optional
     *
     * @return $this
     *
     * @example ACTIVE
     */
    public function setStatus(?string $value): self
    {
        return $value === null ? $this->_unset('status') : $this->_set('status', $value);
    }

    /**
     * The timestamp related to structure creation date.
     *
     * @optional
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     *
     * @example 2022-08-01
     */
    public function getStructureCreationDate(): ?string
    {
        return $this->_getString('structureCreationDate');
    }

    /**
     * The timestamp related to structure creation date.
     *
     * @optional
     *
     * @return $this
     *
     * @example 2022-08-01
     */
    public function setStructureCreationDate(?string $value): self
    {
        return $value === null ? $this->_unset('structureCreationDate') : $this->_set('structureCreationDate', $value);
    }

    /**
     * Structure name.
     *
     * @optional
     * Maximum length: 255
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     *
     * @example Casa Rubino
     */
    public function getStructureName(): ?string
    {
        return $this->_getString('structureName');
    }

    /**
     * Structure name.
     *
     * @optional
     * Maximum length: 255
     *
     * @return $this
     *
     * @example Casa Rubino
     */
    public function setStructureName(?string $value): self
    {
        return $value === null ? $this->_unset('structureName') : $this->_set('structureName', $value);
    }

    /**
     * E-mail connected to the structure.
     *
     * @optional
     * Maximum length: 255
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     *
     * @example mauro.morandi@nexi.it
     */
    public function getStructureEmail(): ?string
    {
        return $this->_getString('structureEmail');
    }

    /**
     * E-mail connected to the structure.
     *
     * @optional
     * Maximum length: 255
     *
     * @return $this
     *
     * @example mauro.morandi@nexi.it
     */
    public function setStructureEmail(?string $value): self
    {
        return $value === null ? $this->_unset('structureEmail') : $this->_set('structureEmail', $value);
    }

    /**
     * Structure telephone number prefix.
     *
     * @optional
     * Maximum length: 4
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     *
     * @example 39
     */
    public function getMobilePhoneCountryCode(): ?string
    {
        return $this->_getString('mobilePhoneCountryCode');
    }

    /**
     * Structure telephone number prefix.
     *
     * @optional
     * Maximum length: 4
     *
     * @return $this
     *
     * @example 39
     */
    public function setMobilePhoneCountryCode(?string $value): self
    {
        return $value === null ? $this->_unset('mobilePhoneCountryCode') : $this->_set('mobilePhoneCountryCode', $value);
    }

    /**
     * Structure telephone number.
     *
     * @optional
     * Maximum length: 15
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     *
     * @example 3280987654
     */
    public function getMobilePhone(): ?string
    {
        return $this->_getString('mobilePhone');
    }

    /**
     * Structure telephone number.
     *
     * @optional
     * Maximum length: 15
     *
     * @return $this
     *
     * @example 3280987654
     */
    public function setMobilePhone(?string $value): self
    {
        return $value === null ? $this->_unset('mobilePhone') : $this->_set('mobilePhone', $value);
    }

    /**
     * Check in from time to be intended as a local time of the structure.
     *
     * @optional
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     *
     * @example 14:00
     */
    public function getCheckInFromTime(): ?string
    {
        return $this->_getString('checkInFromTime');
    }

    /**
     * Check in from time to be intended as a local time of the structure.
     *
     * @optional
     *
     * @return $this
     *
     * @example 14:00
     */
    public function setCheckInFromTime(?string $value): self
    {
        return $value === null ? $this->_unset('checkInFromTime') : $this->_set('checkInFromTime', $value);
    }

    /**
     * Check in to time to be intended as a local time of the structure.
     *
     * @optional
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     *
     * @example 23:00
     */
    public function getCheckInToTime(): ?string
    {
        return $this->_getString('checkInToTime');
    }

    /**
     * Check in to time to be intended as a local time of the structure.
     *
     * @optional
     *
     * @return $this
     *
     * @example 23:00
     */
    public function setCheckInToTime(?string $value): self
    {
        return $value === null ? $this->_unset('checkInToTime') : $this->_set('checkInToTime', $value);
    }

    /**
     * Check out from time to be intended as a local time of the structure.
     *
     * @optional
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     *
     * @example 06:00
     */
    public function getCheckOutFromTime(): ?string
    {
        return $this->_getString('checkOutFromTime');
    }

    /**
     * Check out from time to be intended as a local time of the structure.
     *
     * @optional
     *
     * @return $this
     *
     * @example 06:00
     */
    public function setCheckOutFromTime(?string $value): self
    {
        return $value === null ? $this->_unset('checkOutFromTime') : $this->_set('checkOutFromTime', $value);
    }

    /**
     * Check in to time to be intended as a local time of the structure.
     *
     * @optional
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     *
     * @example 10:00
     */
    public function getCheckOutToTime(): ?string
    {
        return $this->_getString('checkOutToTime');
    }

    /**
     * Check in to time to be intended as a local time of the structure.
     *
     * @optional
     *
     * @return $this
     *
     * @example 10:00
     */
    public function setCheckOutToTime(?string $value): self
    {
        return $value === null ? $this->_unset('checkOutToTime') : $this->_set('checkOutToTime', $value);
    }

    /**
     * Identification code of the terms and conditions associated with the structure for guaranteed reservation with penalty (reservationType = GUARANTEED_PENALTY).
     *
     * @optional
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     *
     * @example b5c66332-3853-48c3-b5a7-a12678d6ca9c
     */
    public function getTecGuaranteedPenaltyId(): ?string
    {
        return $this->_getString('tecGuaranteedPenaltyId');
    }

    /**
     * Identification code of the terms and conditions associated with the structure for guaranteed reservation with penalty (reservationType = GUARANTEED_PENALTY).
     *
     * @optional
     *
     * @return $this
     *
     * @example b5c66332-3853-48c3-b5a7-a12678d6ca9c
     */
    public function setTecGuaranteedPenaltyId(?string $value): self
    {
        return $value === null ? $this->_unset('tecGuaranteedPenaltyId') : $this->_set('tecGuaranteedPenaltyId', $value);
    }

    /**
     * Identification code of the terms and conditions associated with the structure for guaranteed reservation (reservationType = GUARANTEED_NOSHOW).
     *
     * @optional
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     *
     * @example b5c66332-3853-48c3-b5a7-a12678d6ca9c
     */
    public function getTecGuaranteedNoShowId(): ?string
    {
        return $this->_getString('tecGuaranteedNoShowId');
    }

    /**
     * Identification code of the terms and conditions associated with the structure for guaranteed reservation (reservationType = GUARANTEED_NOSHOW).
     *
     * @optional
     *
     * @return $this
     *
     * @example b5c66332-3853-48c3-b5a7-a12678d6ca9c
     */
    public function setTecGuaranteedNoShowId(?string $value): self
    {
        return $value === null ? $this->_unset('tecGuaranteedNoShowId') : $this->_set('tecGuaranteedNoShowId', $value);
    }

    /**
     * Identification code of the terms and conditions associated with the structure for refundable prepaid reservation (reservationType = PREPAID_REFUNDABLE).
     *
     * @optional
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     *
     * @example b7b20af0-01e1-431d-bfbc-c41697720d1d
     */
    public function getTecRefundableId(): ?string
    {
        return $this->_getString('tecRefundableId');
    }

    /**
     * Identification code of the terms and conditions associated with the structure for refundable prepaid reservation (reservationType = PREPAID_REFUNDABLE).
     *
     * @optional
     *
     * @return $this
     *
     * @example b7b20af0-01e1-431d-bfbc-c41697720d1d
     */
    public function setTecRefundableId(?string $value): self
    {
        return $value === null ? $this->_unset('tecRefundableId') : $this->_set('tecRefundableId', $value);
    }

    /**
     * Identification code of the terms and conditions associated with the structure for non-refundable prepaid reservation (reservationType = PREPAID_NOT_REFUNDABLE).
     *
     * @optional
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     *
     * @example b28aaa05-ae84-40a2-9292-8006f176534b
     */
    public function getTecNotRefundableId(): ?string
    {
        return $this->_getString('tecNotRefundableId');
    }

    /**
     * Identification code of the terms and conditions associated with the structure for non-refundable prepaid reservation (reservationType = PREPAID_NOT_REFUNDABLE).
     *
     * @optional
     *
     * @return $this
     *
     * @example b28aaa05-ae84-40a2-9292-8006f176534b
     */
    public function setTecNotRefundableId(?string $value): self
    {
        return $value === null ? $this->_unset('tecNotRefundableId') : $this->_set('tecNotRefundableId', $value);
    }

    /**
     * Array containing custom fields linked to the structure.
     *
     * @optional
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     *
     * @return \MLocati\Nexi\Entity\CustomField[]|null
     */
    public function getCustomField(): ?array
    {
        return $this->_getEntityArray('customField', CustomField::class);
    }

    /**
     * Array containing custom fields linked to the structure.
     *
     * @param \MLocati\Nexi\Entity\CustomField[]|null $value
     *
     * @optional
     *
     * @return $this
     */
    public function setCustomField(?array $value): self
    {
        return $value === null ? $this->_unset('customField') : $this->_setEntityArray('customField', CustomField::class, $value);
    }
}
