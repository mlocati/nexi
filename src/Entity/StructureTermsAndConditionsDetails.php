<?php

declare(strict_types=1);

namespace MLocati\Nexi\Entity;

use MLocati\Nexi\Entity;

/*
 * WARNING: DO NOT EDIT THIS FILE
 * It has been generated automaticlly from a template.
 * Edit the template instead.
 */

/**
 * @see https://developer.nexi.it/en/api/get-structure_conditions-structureConditionId#tab_response
 * @see https://developer.nexi.it/en/api/post-structure_conditions#tab_body
 */
class StructureTermsAndConditionsDetails extends Entity
{
    /**
     * Language to be used on the termsAndConditions labels, ISO 639-2.
     *
     * @optional
     * Minimum length: 3
     * Maximum length: 3
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     *
     * @example ENG
     */
    public function getLanguage(): ?string
    {
        return $this->_getString('language');
    }

    /**
     * Language to be used on the termsAndConditions labels, ISO 639-2.
     *
     * @optional
     * Minimum length: 3
     * Maximum length: 3
     *
     * @return $this
     *
     * @example ENG
     */
    public function setLanguage(?string $value): self
    {
        return $value === null ? $this->_unset('language') : $this->_set('language', $value);
    }

    /**
     * Text to be showed beside the checkmark of acceptance.
     *
     * @optional
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     *
     * @example Confirm to accept terms and conditions
     */
    public function getCheckMarkLabelStructureCondition(): ?string
    {
        return $this->_getString('checkMarkLabelStructureCondition');
    }

    /**
     * Text to be showed beside the checkmark of acceptance.
     *
     * @optional
     *
     * @return $this
     *
     * @example Confirm to accept terms and conditions
     */
    public function setCheckMarkLabelStructureCondition(?string $value): self
    {
        return $value === null ? $this->_unset('checkMarkLabelStructureCondition') : $this->_set('checkMarkLabelStructureCondition', $value);
    }

    /**
     * Text of the hyperlink of the T&C detailed text.
     *
     * @optional
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     *
     * @example Property Condition
     */
    public function getLinkLabelStructureCondition(): ?string
    {
        return $this->_getString('linkLabelStructureCondition');
    }

    /**
     * Text of the hyperlink of the T&C detailed text.
     *
     * @optional
     *
     * @return $this
     *
     * @example Property Condition
     */
    public function setLinkLabelStructureCondition(?string $value): self
    {
        return $value === null ? $this->_unset('linkLabelStructureCondition') : $this->_set('linkLabelStructureCondition', $value);
    }

    /**
     * Text of the terms and conditions in html format, encoded in Base64.
     *
     * @optional
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     *
     * @example TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdCwgc2VkIGRvIGVpdXNtb2QgdGVtcG9yIGluY2lkaWR1bnQgdXQgbGFib3JlIGV0IGRvbG9yZSBtYWduYSBhbGlxdWEuIFV0IGVuaW0gYWQgbWluaW0gdmVuaWFtLCBxdWlzIG5vc3RydWQgZXhlcmNpdGF0aW9uIHVsbGFtY28gbGFib3JpcyBkb2xvciBzaXQgYW1ldA==
     */
    public function getTextStructureCondition(): ?string
    {
        return $this->_getString('textStructureCondition');
    }

    /**
     * Text of the terms and conditions in html format, encoded in Base64.
     *
     * @optional
     *
     * @return $this
     *
     * @example TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdCwgc2VkIGRvIGVpdXNtb2QgdGVtcG9yIGluY2lkaWR1bnQgdXQgbGFib3JlIGV0IGRvbG9yZSBtYWduYSBhbGlxdWEuIFV0IGVuaW0gYWQgbWluaW0gdmVuaWFtLCBxdWlzIG5vc3RydWQgZXhlcmNpdGF0aW9uIHVsbGFtY28gbGFib3JpcyBkb2xvciBzaXQgYW1ldA==
     */
    public function setTextStructureCondition(?string $value): self
    {
        return $value === null ? $this->_unset('textStructureCondition') : $this->_set('textStructureCondition', $value);
    }

    /**
     * Text to be showed beside the checkmark of acceptance of the cancellation terms.
     *
     * @optional
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     *
     * @example Confirm to accept terms and conditions
     */
    public function getCheckMarkLabelCancellationCondition(): ?string
    {
        return $this->_getString('checkMarkLabelCancellationCondition');
    }

    /**
     * Text to be showed beside the checkmark of acceptance of the cancellation terms.
     *
     * @optional
     *
     * @return $this
     *
     * @example Confirm to accept terms and conditions
     */
    public function setCheckMarkLabelCancellationCondition(?string $value): self
    {
        return $value === null ? $this->_unset('checkMarkLabelCancellationCondition') : $this->_set('checkMarkLabelCancellationCondition', $value);
    }

    /**
     * Text of the hyperlink of the cancellation terms detailed text.
     *
     * @optional
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     *
     * @example Property cancellation Condition
     */
    public function getLinkLabelCancellationCondition(): ?string
    {
        return $this->_getString('linkLabelCancellationCondition');
    }

    /**
     * Text of the hyperlink of the cancellation terms detailed text.
     *
     * @optional
     *
     * @return $this
     *
     * @example Property cancellation Condition
     */
    public function setLinkLabelCancellationCondition(?string $value): self
    {
        return $value === null ? $this->_unset('linkLabelCancellationCondition') : $this->_set('linkLabelCancellationCondition', $value);
    }

    /**
     * Text of the cancellation terms and conditions in html format, encoded in Base64.
     *
     * @optional
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     *
     * @example TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdCwgc2VkIGRvIGVpdXNtb2QgdGVtcG9yIGluY2lkaWR1bnQgdXQgbGFib3JlIGV0IGRvbG9yZSBtYWduYSBhbGlxdWEuIFV0IGVuaW0gYWQgbWluaW0gdmVuaWFtLCBxdWlzIG5vc3RydWQgZXhlcmNpdGF0aW9uIHVsbGFtY28gbGFib3JpcyBkb2xvciBzaXQgYW1ldA==
     */
    public function getTextCancellationCondition(): ?string
    {
        return $this->_getString('textCancellationCondition');
    }

    /**
     * Text of the cancellation terms and conditions in html format, encoded in Base64.
     *
     * @optional
     *
     * @return $this
     *
     * @example TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdCwgc2VkIGRvIGVpdXNtb2QgdGVtcG9yIGluY2lkaWR1bnQgdXQgbGFib3JlIGV0IGRvbG9yZSBtYWduYSBhbGlxdWEuIFV0IGVuaW0gYWQgbWluaW0gdmVuaWFtLCBxdWlzIG5vc3RydWQgZXhlcmNpdGF0aW9uIHVsbGFtY28gbGFib3JpcyBkb2xvciBzaXQgYW1ldA==
     */
    public function setTextCancellationCondition(?string $value): self
    {
        return $value === null ? $this->_unset('textCancellationCondition') : $this->_set('textCancellationCondition', $value);
    }
}
