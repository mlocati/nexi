<?php

declare(strict_types=1);

namespace MLocati\Nexi\XPayWeb\Entity;

use MLocati\Nexi\XPayWeb\Entity;

/*
 * WARNING: DO NOT EDIT THIS FILE
 * It has been generated automaticlly from a template.
 * Edit the template instead.
 */

/**
 * @see https://developer.nexi.it/en/api/get-orders-orderId#tab_response
 * @see https://developer.nexi.it/en/api/get-reservations-reservationId#tab_response
 * @see https://developer.nexi.it/en/api/post-orders-paybylink#tab_response
 * @see https://developer.nexi.it/en/api/post-reservations-reservationId-paybylink#tab_response
 */
class PaymentLink extends Entity
{
    /**
     * Unique identifier for this link.
     *
     * @optional
     *
     * @throws \MLocati\Nexi\XPayWeb\Exception\WrongFieldType
     *
     * @example 92864835
     */
    public function getLinkId(): ?string
    {
        return $this->_getString('linkId');
    }

    /**
     * Unique identifier for this link.
     *
     * @optional
     *
     * @return $this
     *
     * @example 92864835
     */
    public function setLinkId(?string $value): self
    {
        return $value === null ? $this->_unset('linkId') : $this->_set('linkId', $value);
    }

    /**
     * Transaction amount in smallest currency unit. 50 EUR is represented as 5000 (2 decimals) 50 JPY is represented as 50 (0 decimals).
     *
     * @optional
     *
     * @throws \MLocati\Nexi\XPayWeb\Exception\WrongFieldType
     *
     * @example 3545
     */
    public function getAmount(): ?string
    {
        return $this->_getString('amount');
    }

    /**
     * Transaction amount in smallest currency unit. 50 EUR is represented as 5000 (2 decimals) 50 JPY is represented as 50 (0 decimals).
     *
     * @optional
     *
     * @return $this
     *
     * @example 3545
     */
    public function setAmount(?string $value): self
    {
        return $value === null ? $this->_unset('amount') : $this->_set('amount', $value);
    }

    /**
     * Expiration date.
     *
     * @optional
     *
     * @throws \MLocati\Nexi\XPayWeb\Exception\WrongFieldType
     *
     * @example 2022-09-01
     */
    public function getExpirationDate(): ?string
    {
        return $this->_getString('expirationDate');
    }

    /**
     * Expiration date.
     *
     * @optional
     *
     * @return $this
     *
     * @example 2022-09-01
     */
    public function setExpirationDate(?string $value): self
    {
        return $value === null ? $this->_unset('expirationDate') : $this->_set('expirationDate', $value);
    }

    /**
     * Link to be shared with the customer for doing the payment.
     *
     * @optional
     *
     * @throws \MLocati\Nexi\XPayWeb\Exception\WrongFieldType
     *
     * @example https://{gateway_hosted_page}
     */
    public function getLink(): ?string
    {
        return $this->_getString('link');
    }

    /**
     * Link to be shared with the customer for doing the payment.
     *
     * @optional
     *
     * @return $this
     *
     * @example https://{gateway_hosted_page}
     */
    public function setLink(?string $value): self
    {
        return $value === null ? $this->_unset('link') : $this->_set('link', $value);
    }

    /**
     * Operation ID identifying the successful payment related to this link.
     *
     * @optional
     *
     * @throws \MLocati\Nexi\XPayWeb\Exception\WrongFieldType
     *
     * @example 3470744
     */
    public function getPaidByOperationId(): ?string
    {
        return $this->_getString('paidByOperationId');
    }

    /**
     * Operation ID identifying the successful payment related to this link.
     *
     * @optional
     *
     * @return $this
     *
     * @example 3470744
     */
    public function setPaidByOperationId(?string $value): self
    {
        return $value === null ? $this->_unset('paidByOperationId') : $this->_set('paidByOperationId', $value);
    }

    /**
     * {@inheritdoc}
     *
     * @see \MLocati\Nexi\XPayWeb\Entity::getRequiredFields()
     */
    protected function getRequiredFields(): array
    {
        return [
        ];
    }
}
