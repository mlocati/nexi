<?php

declare(strict_types=1);

namespace MLocati\Nexi\Entity;

use MLocati\Nexi\Entity;

/*
 * WARNING: DO NOT EDIT THIS FILE
 * It has been generated automaticlly from a template.
 * Edit the template instead.
 */

/**
 * @see https://developer.nexi.it/en/api/get-structure_conditions-structures-structureid#tab_response
 */
class StructureTermsAndConditions extends Entity
{
    /**
     * Unique identifier of terms and conditions for the structure.
     *
     * @optional
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     *
     * @example aeca2ac3-1d03-4f17-855b-19767f9c4586
     */
    public function getStructureConditionId(): ?string
    {
        return $this->_getString('structureConditionId');
    }

    /**
     * Unique identifier of terms and conditions for the structure.
     *
     * @optional
     *
     * @return $this
     *
     * @example aeca2ac3-1d03-4f17-855b-19767f9c4586
     */
    public function setStructureConditionId(?string $value): self
    {
        return $value === null ? $this->_unset('structureConditionId') : $this->_set('structureConditionId', $value);
    }

    /**
     * Free label to let the merchant identify the termsAndConditions version for audit purposes.
     *
     * @optional
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     *
     * @example Grand Hotel Mississipi selling conditions v01
     */
    public function getName(): ?string
    {
        return $this->_getString('name');
    }

    /**
     * Free label to let the merchant identify the termsAndConditions version for audit purposes.
     *
     * @optional
     *
     * @return $this
     *
     * @example Grand Hotel Mississipi selling conditions v01
     */
    public function setName(?string $value): self
    {
        return $value === null ? $this->_unset('name') : $this->_set('name', $value);
    }

    /**
     * Timestamp related to creation date for terms and conditions.
     *
     * @optional
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     *
     * @example 2023-03-16T00:00:00.000Z
     */
    public function getTecCreationDate(): ?string
    {
        return $this->_getString('tecCreationDate');
    }

    /**
     * Timestamp related to creation date for terms and conditions.
     *
     * @optional
     *
     * @return $this
     *
     * @example 2023-03-16T00:00:00.000Z
     */
    public function setTecCreationDate(?string $value): self
    {
        return $value === null ? $this->_unset('tecCreationDate') : $this->_set('tecCreationDate', $value);
    }

    /**
     * Language to be used on the termsAndConditions labels, ISO 639-2.
     *
     * @optional
     * Minimum length: 3
     * Maximum length: 3
     *
     * @throws \MLocati\Nexi\Exception\WrongFieldType
     *
     * @example ENG
     */
    public function getLanguage(): ?string
    {
        return $this->_getString('language');
    }

    /**
     * Language to be used on the termsAndConditions labels, ISO 639-2.
     *
     * @optional
     * Minimum length: 3
     * Maximum length: 3
     *
     * @return $this
     *
     * @example ENG
     */
    public function setLanguage(?string $value): self
    {
        return $value === null ? $this->_unset('language') : $this->_set('language', $value);
    }
}
