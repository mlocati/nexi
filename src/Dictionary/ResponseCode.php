<?php

declare(strict_types=1);

namespace MLocati\Nexi\XPayWeb\Dictionary;

use ReflectionClass;

/*
 * WARNING: DO NOT EDIT THIS FILE
 * It has been generated automaticlly from a template.
 * Edit the template instead.
 */

/**
 * List of ISO 8583 response codes.
 *
 * @see https://developer.nexi.it/en/altro-/codifiche/Response-Code-ISO
 */
class ResponseCode
{
    /**
     * Approved
     *
     * @var string
     */
    const ID_000 = '000';

    /**
     * Do not honour
     *
     * @var string
     */
    const ID_100 = '100';

    /**
     * Expired card or invalid expiration date
     *
     * @var string
     */
    const ID_101 = '101';

    /**
     * Suspected fraud
     *
     * @var string
     */
    const ID_102 = '102';

    /**
     * Restricted card
     *
     * @var string
     */
    const ID_104 = '104';

    /**
     * Allowable PIN tries exceeded
     *
     * @var string
     */
    const ID_106 = '106';

    /**
     * Invalid merchant
     *
     * @var string
     */
    const ID_109 = '109';

    /**
     * Invalid amount
     *
     * @var string
     */
    const ID_110 = '110';

    /**
     * Invalid card number
     *
     * @var string
     */
    const ID_111 = '111';

    /**
     * Requested function not supported
     *
     * @var string
     */
    const ID_115 = '115';

    /**
     * Not sufficient funds
     *
     * @var string
     */
    const ID_116 = '116';

    /**
     * Incorret PIN
     *
     * @var string
     */
    const ID_117 = '117';

    /**
     * No card record
     *
     * @var string
     */
    const ID_118 = '118';

    /**
     * Transaction not permitted to cardholder
     *
     * @var string
     */
    const ID_119 = '119';

    /**
     * Transaction not permitted to terminal
     *
     * @var string
     */
    const ID_120 = '120';

    /**
     * Exceeds withdrawal amount limit
     *
     * @var string
     */
    const ID_121 = '121';

    /**
     * Transaction not permitted
     *
     * @var string
     */
    const ID_122 = '122';

    /**
     * Exceeds withdrawal frequency limit
     *
     * @var string
     */
    const ID_123 = '123';

    /**
     * Violation of law
     *
     * @var string
     */
    const ID_124 = '124';

    /**
     * Card not effective
     *
     * @var string
     */
    const ID_125 = '125';

    /**
     * Invalid PIN block
     *
     * @var string
     */
    const ID_126 = '126';

    /**
     * Suspected counterfeit card
     *
     * @var string
     */
    const ID_129 = '129';

    /**
     * Do not honour
     *
     * @var string
     */
    const ID_200 = '200';

    /**
     * Suspected fraud
     *
     * @var string
     */
    const ID_202 = '202';

    /**
     * Invalid card
     *
     * @var string
     */
    const ID_204 = '204';

    /**
     * Lost card
     *
     * @var string
     */
    const ID_208 = '208';

    /**
     * Stolen card
     *
     * @var string
     */
    const ID_209 = '209';

    /**
     * Suspected counterfeit card
     *
     * @var string
     */
    const ID_210 = '210';

    /**
     * Excess Reattempts: attempt to resubmit the same transaction that was previously denied, for which the circuits prohibit repetition. Please contact the customer to verify with their bank or obtain a new payment instrument.
     *
     * @var string
     */
    const ID_413 = '413';

    /**
     * Pending
     *
     * @var string
     */
    const ID_888 = '888';

    /**
     * Invalid transaction
     *
     * @var string
     */
    const ID_902 = '902';

    /**
     * Re-enter transaction
     *
     * @var string
     */
    const ID_903 = '903';

    /**
     * Format error
     *
     * @var string
     */
    const ID_904 = '904';

    /**
     * Cutover in process
     *
     * @var string
     */
    const ID_906 = '906';

    /**
     * Card issuer or switch inoperative
     *
     * @var string
     */
    const ID_907 = '907';

    /**
     * Transaction destination cannot be found for routing
     *
     * @var string
     */
    const ID_908 = '908';

    /**
     * System malfunction
     *
     * @var string
     */
    const ID_909 = '909';

    /**
     * Card issuer timed out
     *
     * @var string
     */
    const ID_911 = '911';

    /**
     * Duplicate transmission
     *
     * @var string
     */
    const ID_913 = '913';

    /**
     * Agreement error during creation due to merchant's parameters
     *
     * @var string
     */
    const ID_999 = '999';

    /**
     * @return string[]
     */
    public function getAvailableIDs(): array
    {
        $result = [];
        $class = new ReflectionClass($this);
        foreach ($class->getConstants() as $name => $value) {
            if (strpos($name, 'ID_') === 0 && is_string($value)) {
                $result[] = $value;
            }
        }

        return $result;
    }
}
